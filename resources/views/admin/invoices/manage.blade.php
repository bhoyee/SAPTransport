@extends('admin.layouts.admin-layout')

@section('content')
<h1 class="app-page-title">Manage Invoices</h1>

<!-- Filter Dropdown -->
<div class="mb-4">
    <label for="filter">Select Date Range:</label>
    <select id="filter" class="form-select">
        <option value="daily">Daily(Today)</option>
        <option value="weekly">Weekly</option>
        <option value="monthly">Monthly</option>
        <option value="yearly">Yearly</option>
    </select>
</div>

<!-- Cards for Invoice Statistics -->
<div class="row mb-4">
    <div class="col-md-4">
        <div class="card text-white bg-success mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Paid Invoices</h5>
                <p class="card-text" id="total-paid">0</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-danger mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Unpaid Invoices</h5>
                <p class="card-text" id="total-unpaid">0</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-info mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Refunded Invoices</h5>
                <p class="card-text" id="total-refunded">0</p>
            </div>
        </div>
    </div>
</div>

<p>All Invoices in the system. You can search and filter</p>

<!-- DataTable for Invoices -->
<div class="app-card app-card-details shadow-sm mb-4">
    <div class="app-card-body p-4">
        <table id="invoices-table" class="table table-striped table-bordered dt-responsive nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>S/N</th>
                    <th>Booking Ref</th>
                    <th>Invoice Number</th>
                    <th>Invoice Date</th>
                    <th>Amount</th>
                    <th>Status</th>
                    <th>Updated At</th>
                    <th>Generated By</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be fetched via AJAX -->
            </tbody>
        </table>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteInvoiceModal" tabindex="-1" aria-labelledby="deleteInvoiceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteInvoiceModalLabel">Delete Invoice</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this invoice? <br />
                <strong>Note:</strong> Deleting this invoice will also delete payment details linked to this invoice and cannot be reversed.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn btn-danger" id="confirm-delete">
                    <span id="delete-btn-text">Yes, Delete</span>
                    <span id="delete-btn-spinner" class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: none;"></span>
                </button>
            </div>
        </div>
    </div>
</div>

@endsection

@push('scripts')
<script>
$(document).ready(function() {
    let filter = 'daily'; // Default filter value
    let deleteInvoiceId = null;

    // Initialize DataTable
    let table = $('#invoices-table').DataTable({
        responsive: true,
        autoWidth: false,
        paging: true,
        searching: true,
        order: [[3, 'desc']],
        ajax: {
            url: "{{ route('admin.invoices.fetchAll') }}",
            method: 'GET',
            dataSrc: 'data',
            error: function(xhr, status, error) {
                console.error('DataTables AJAX error:', error);
            }
        },
        columns: [
            { data: null },
            { data: 'booking_reference' },
            { data: 'invoice_number' },
            { data: 'invoice_date' },
            { data: 'amount', render: function(data) { return `â‚¦${parseFloat(data).toFixed(2)}`; }},
            { data: 'status', render: function(data) {
                if (data === 'Paid') return '<span class="badge bg-success">Paid</span>';
                else if (data === 'Unpaid') return '<span class="badge bg-danger">Unpaid</span>';
                else if (data === 'Refunded') return '<span class="badge bg-info">Refunded</span>';
            }},
            { data: 'updated_at', visible: false },
            { data: 'generated_by' },
            { data: null, render: function(data) {
                return `
                    <a href="/admin/invoices/${data.id}/view" class="btn btn-sm btn-info">View</a>
                    <a href="/admin/invoices/${data.id}/edit" class="btn btn-sm btn-warning">Edit</a>
                    <button class="btn btn-sm btn-danger" onclick="confirmDelete(${data.id})">Delete</button>
                `;
            }},
        ],
        drawCallback: function(settings) {
            let api = this.api();
            let startIndex = api.page.info().start;
            api.column(0, { page: 'current' }).nodes().each(function(cell, i) {
                cell.innerHTML = startIndex + i + 1;
            });
        }
    });

    // Delete confirmation modal function
    window.confirmDelete = function(id) {
        deleteInvoiceId = id;
        $('#deleteInvoiceModal').modal('show');
    }

    // Delete the invoice on confirmation
    $('#confirm-delete').on('click', function() {
        const btnText = $('#delete-btn-text');
        const btnSpinner = $('#delete-btn-spinner');
        
        btnText.hide();
        btnSpinner.show();

        // Send AJAX request to delete the invoice
        $.ajax({
            url: `/admin/invoices/${deleteInvoiceId}/delete`,
            method: 'DELETE',
            headers: { 'X-CSRF-TOKEN': '{{ csrf_token() }}' },
            success: function(response) {
                $('#deleteInvoiceModal').modal('hide');
                btnText.show();
                btnSpinner.hide();
                table.ajax.reload(); // Refresh the DataTable
                alert('Invoice deleted successfully');
            },
            error: function(xhr, status, error) {
                btnText.show();
                btnSpinner.hide();
                console.error('Error deleting invoice:', error);
                alert('Failed to delete invoice');
            }
        });
    });

    // Load initial data for the cards
    loadInvoiceStats(filter);
    $('#filter').on('change', function() {
        filter = $(this).val();
        loadInvoiceStats(filter);
    });
    setInterval(function() { loadInvoiceStats(filter); }, 30000);
});
</script>
@endpush
